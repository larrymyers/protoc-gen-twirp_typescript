// Generated by protoc-gen-twirp_typescript. DO NOT EDIT
import { twitch } from './service.pb';
import { createTwirpAdapter } from 'pbjs-twirp';
import Axios from 'axios';

const getServiceMethodName = (fn: any): string => {
    if (fn === twitch.twirp.example.Haberdasher.prototype.makeHat) {
        return 'MakeHat';
    }

    throw new Error('Unknown Method');
};

export const HaberdasherPathPrefix = '/twirp/twitch.twirp.example.Haberdasher/';

export const createHaberdasher = (
    baseURL: string
): twitch.twirp.example.Haberdasher => {
    const axios = Axios.create({
        baseURL: baseURL + HaberdasherPathPrefix,
        headers: {
            Accept: 'application/protobuf'
        }
    });

    return twitch.twirp.example.Haberdasher.create(
        createTwirpAdapter(axios, getServiceMethodName)
    );
};
